// Generated by view binder compiler. Do not edit!
package com.dicoding.smartcashier.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.smartcashier.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListHistoryBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDetail;

  @NonNull
  public final CardView cvTransaction;

  @NonNull
  public final TextView tvDate;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvTransacrion;

  private ListHistoryBinding(@NonNull CardView rootView, @NonNull Button btnDetail,
      @NonNull CardView cvTransaction, @NonNull TextView tvDate, @NonNull TextView tvId,
      @NonNull TextView tvTitle, @NonNull TextView tvTransacrion) {
    this.rootView = rootView;
    this.btnDetail = btnDetail;
    this.cvTransaction = cvTransaction;
    this.tvDate = tvDate;
    this.tvId = tvId;
    this.tvTitle = tvTitle;
    this.tvTransacrion = tvTransacrion;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListHistoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListHistoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_history, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListHistoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_detail;
      Button btnDetail = ViewBindings.findChildViewById(rootView, id);
      if (btnDetail == null) {
        break missingId;
      }

      CardView cvTransaction = (CardView) rootView;

      id = R.id.tv_date;
      TextView tvDate = ViewBindings.findChildViewById(rootView, id);
      if (tvDate == null) {
        break missingId;
      }

      id = R.id.tv_id;
      TextView tvId = ViewBindings.findChildViewById(rootView, id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tv_transacrion;
      TextView tvTransacrion = ViewBindings.findChildViewById(rootView, id);
      if (tvTransacrion == null) {
        break missingId;
      }

      return new ListHistoryBinding((CardView) rootView, btnDetail, cvTransaction, tvDate, tvId,
          tvTitle, tvTransacrion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
